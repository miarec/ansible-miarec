# ------------------------------------------------
# Disable SELinux on all hosts
# ------------------------------------------------
- name: Disable SELinux
  hosts: all
  roles:
    - role: 'disable-selinux'
      tags: 'disable-selinux'


# ------------------------------------------------
# Install database
# ------------------------------------------------
- name: Install PostgreSQL
  hosts: db
  vars_files:
    - vars/db.yml

  pre_tasks:
    - set_fact:
        postgresql_pg_hba_custom:
          - comment: 'IPv4 local connections:'
            address: '127.0.0.1/32'
            type: host
            database: all
            user: "{{ miarec_db_user }}"
            method: 'md5'

          - comment: 'IPv6 local connections:'
            address: '::1/128'
            type: host
            database: all
            user: "{{ miarec_db_user }}"
            method: 'md5'

    - set_fact:
        tmp_rule:
          comment: "IPv4 connection from {{ hostvars[item].inventory_hostname }}:"
          address: "{{ hostvars[item].private_ip_address }}/32" 
          user: "{{ miarec_db_user }}"
          type: host
          database: "{{ miarec_db_name }}"
          method: 'md5'
      with_items: "{{ groups.recorder + groups.web }}"
      when: hostvars[item].private_ip_address != hostvars[inventory_hostname].private_ip_address
      register: tmp_pg_hba_rules

    - debug: var=tmp_pg_hba_rules

      
    - set_fact:
        pg_hba_rules: "{{ tmp_pg_hba_rules.results | selectattr('ansible_facts', 'defined') | map(attribute='ansible_facts.tmp_rule') | list }}"

    - set_fact:
        postgresql_pg_hba_custom: "{{ postgresql_pg_hba_custom }}  + {{ pg_hba_rules }}"
        # Listen on all interfaces. By default, it listens on localhost only
        postgresql_listen_addresses: "*"
      when: pg_hba_rules

    - debug: var=postgresql_pg_hba_custom

  become: yes
  roles:
    - role: 'postgresql'
  tags: 'postgresql'


# ------------------------------------------------
# Install redis
# ------------------------------------------------
- name: Install redis
  hosts: redis
  vars_files:
    - vars/redis.yml
  become: yes
  pre_tasks:

    - set_fact:
        ip_address: "{{ hostvars[item].private_ip_address }}" 
      with_items: "{{ groups.recorder + groups.web }}"
      when: hostvars[item].private_ip_address != hostvars[inventory_hostname].private_ip_address
      register: tmp_ip_addresses

    - set_fact:
        all_ip_addresses: "{{ tmp_ip_addresses.results | selectattr('ansible_facts', 'defined') | map(attribute='ansible_facts.ip_address') | list }}"

    - set_fact:
        # Bind to all interfaces if other components are connecting to it remotely
        redis_bind: 0.0.0.0 
      when: all_ip_addresses

    - debug: var=all_ip_addresses
    - debug: var=redis_bind
  roles:
    - role: 'redis'
  tags: 'redis'


# ------------------------------------------------
# Install Apache
# ------------------------------------------------
- name: Install Apache
  hosts: web
  vars_files:
    - vars/web.yml
  become: yes
  roles:
    - role: 'apache'
  tags: 'apache'


# ------------------------------------------------
# Install Python (web, celery, celerybeat)
# ------------------------------------------------
- name: Install Python
  hosts: 
    - web
    - celery
    - celerybeat
  vars_files:
    - vars/web.yml
  become: yes
  roles:
    - role: 'python'
  tags: 'python'

