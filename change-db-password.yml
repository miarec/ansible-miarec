---

# Check password characters
- name: Preflight
  hosts: all
  vars_files:
    - vars/db.yml
  pre_tasks:
    - include_vars: vars/custom.yml
      failed_when: false

  tasks:
    - name: Check for illeagal character in secrets.
      fail:
        msg: Illeagal character, secret_db_password cannot contain '%'.
      when:
        - secret_db_password is search("%")


# ------------------------------------------------
# Change DB password
# ------------------------------------------------
- name: Change DB User password.
  hosts: db
  vars_files:
    - vars/db.yml
  pre_tasks:
    - include_vars: vars/custom.yml
      failed_when: false

  tasks:
    - name: Modify PostgreSQL user
      postgresql_user:
        name: "{{ miarec_db_user }}"
        password: "{{ miarec_db_password }}"
        state: present
      become: true
      become_user: "postgres"

# Modify pgbouncer file
- name: PGBouncer.
  hosts: db
  vars_files:
    - vars/db.yml
  pre_tasks:
    - include_vars: vars/custom.yml
      failed_when: false

  tasks:
    - name: Add users to userlist.txt
      copy:
        dest: "{{ pgbouncer_auth_file | default('/etc/pgbouncer/userlist.txt') }}"
        owner: "{{ pgbouncer_user | default('pgbouncer') }}"
        group: "{{ pgbouncer_group | default('pgbouncer') }}"
        mode: 0600
        content: |
          "stats" "passwordless"
          {% for user in pgbouncer_users %}
          "{{ user.name }}" "md5{{ (user.pass + user.name) | hash('md5') }}"
          {% endfor %}
      become: true
      register: _pgbouncer_auth
      when: install_pgbouncer|default(false)|bool

    - name: restart pgbouncer
      service:
        name: pgbouncer
        state: restarted
      become: yes
      when: _pgbouncer_auth.changed

# Modify miarec app config files
- name: miarecweb.
  hosts: web
  vars_files:
    - vars/db.yml
    - vars/web.yml
  pre_tasks:
    - include_vars: vars/custom.yml
      failed_when: false

  tasks:

    - name: Configure secrets in production.ini file
      lineinfile:
        dest: "{{ miarecweb_install_dir | default('/opt/miarecweb') }}/current/production.ini"
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
      with_items:
        - regexp: '^DATABASE_PASSWORD = '
          line: 'DATABASE_PASSWORD = {{ miarecweb_db_password }}'
      no_log: true
      become: true
      register: _miarecweb_config


    - name: reload services - Centos
      service:
        name: "{{ item }}"
        state: restarted
      become: yes
      with_items:
        - httpd
        - celeryd
        - celerybeat
      when:
        - _miarecweb_config.changed
        - ansible_os_family == "RedHat"

    - name: reload services - Debian
      service:
        name: "{{ item }}"
        state: restarted
      become: yes
      with_items:
        - apache2
        - celeryd
        - celerybeat
      when:
        - _miarecweb_config.changed
        - ansible_os_family == "Debian"

- name: miarec.
  hosts: recorder
  vars_files:
    - vars/db.yml
  pre_tasks:
    - include_vars: vars/custom.yml
      failed_when: false

  tasks:

    - name: Configure secrets in miarec.ini file
      ini_file:
        dest: "{{ miarec_install_dir | default('/opt/miarec') }}/current/miarec.ini"
        section: "{{ item.section }}"
        option: "{{ item.option }}"
        value: "{{ item.value }}"
        owner: root
        group: root
        mode: u=rwX,g=rX,o=
      with_items:
        - section: 'SQLConfig'
          option: 'Password'
          value: '{{ miarec_db_password }}'
        - section: 'SQLCallsLog'
          option: 'Password'
          value: '{{ miarec_db_password }}'
      no_log: true
      become: true
      register: _miarec_config

    - name: reload services
      service:
        name: "{{ item }}"
        state: restarted
      become: true
      with_items:
        - miarec
      when:
        - _miarec_config.changed

- name: miarec_screen.
  hosts: screen
  vars_files:
    - vars/db.yml
  pre_tasks:
    - include_vars: vars/custom.yml
      failed_when: false

  tasks:

    - name: Configure secrets in miarec_screen.ini file
      ini_file:
        dest: "{{ miarec_screen_install_dir | default('/opt/miarec_screen') }}/current/miarec_screen.ini"
        section: "{{ item.section }}"
        option: "{{ item.option }}"
        value: "{{ item.value }}"
        owner: root
        group: root
        mode: u=rwX,g=rX,o=
      with_items:
        - section: 'Database'
          option: 'Password'
          value: '{{ miarec_db_password }}'
      no_log: true
      become: true
      register: _miarec_screen_config

    - name: reload services
      service:
        name: "{{ item }}"
        state: restarted
      become: true
      with_items:
        - miarec_screen
      when:
        - _miarec_screen_config.changed


